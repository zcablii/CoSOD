https://detectron2.readthedocs.io/tutorials/install.html
CUDA_VERSION = torch.__version__.split("+")[-1] 
pip install detectron2 -f https://dl.fbaipublicfiles.com/detectron2/wheels/cu113/torch1.10/index.html# replace cu113 with CUDA_VERSION

Code phase 1: Regin proposal, object level self-attention, bbox classification

1. # loss function gives more weights to positive loss. (pos:neg = 0.55:0.45) # √
2. Finalise train.py: a tidy style, save&load checkpoint pkl, log file... # √
3. Add eval # ----bugs to be fixed
4. Solve terminal warnings # √


Fine tune Co-salienct object bbox classifier hyperparameters:

0. GT box criteria # in util.py boxes_to_gt()
1. image group size
2. batch norm after box features before transformer
3. /i or not /i in positional embeddings (current version: with /i)
5. Positional embeddings added at each encoder layers
6. Auxiliary loss at each layer of transformer encoder
7. # Replace the current transformer with DETR version with minor adaptive customization. # ignore this for now


Code phase 2: Co-sal binary map segmentation from selected bbox.
1. FPN structure (Think about Saliency models)# √
2. Train from gt bboxes.# √


Code phase 3: Joint training & inference
1. Join training bbox classifier and co-sal binary mask head. # √
2. Try some pre/post-processing, e.g. Saliency detection pre-processing, Dense-CRF post-processing
3. Inference!